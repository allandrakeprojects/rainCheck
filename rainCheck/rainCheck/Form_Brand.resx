<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gcCCA0jlqtaNQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQkSURBVHhe
        7VtbiE1RGB73WyL3IpEkoYhI4+HM3ntGlPDAixckKUleXIo6L4rh7HVmoownHoSJIjmz194YTyJ3ZXJL
        k9AouV+aaRjfMv/D2GcxZ5+99py1s7/6mmbmnO///n/ts+6nLHJ0dPSybG+WYfNlJnM3mzavNhk/hZ/X
        wJdgK35/hZ+3LZtfNDPOIfHaZXUXBpNCPGFmL401Ms4OJPUUyXUUwe9gzmDuhlS6cSDJ6o10Ot3bynqL
        YfwM2EaJqGCLmeG7rH3eMAqlH34/4rbbLDGvkh/xMdozt+5WPwpbeohWN21nL8z99JmNkM4d0a+QhdIh
        dbBxFAx5+QZ7hK3oX3aSlZ6HYTvzYeKFz1QpWEOWeg6W7axG4FafkdIRQydZix5VNXwmgn7NM1FyOlmy
        GB3K958fimCP8oPrQTyZy8lqNDBs97QssEZ8IzpmsqsWFuNbJAG1IxrpLFlWh4osXwBxfTq9bmgd9BaR
        dTWA6H1/EK3J+HGyHh6r6uv7QFRl638Dm8AceAy8Aor5hMqZ5LcUaxxOKYSHkeG1kiBB+QSTp00L7WuD
        SPYPpGpzE8RQhtepGWKx9Cbp8BCLDyx2bGmgAoj3nhBrBpL7J6oO8DFiri/TCUIxYpGkOkB0JcQ/+IN1
        wwtYz/cliYKw2HZGKCjCDZJTC6M6N6VQc2j5q8VuZljMsWSaAdhCUuqxpDY3AD3tEUnQrrwpZo70lsAQ
        HztofPJpBuLf+htlQBHWINAXf2CwyTx0aSS9rGhg8vVOol0o20VDkVR0sJg33bTdh10Co7e/PJ7+XTRE
        AbtoBifjz0gqeogdXAxx68Qwtypd35/+HAq0gyxPrgCKHWaSih9S1RfHIYm3/qQCkTkZkosXKmxnhorN
        VfQfG0kyHhAfIzy2u2H+sz+ZItieYg2TSFpziJMjxtfD9GtfEmF4ktT1RqXtzkOrX5ckEIpWxptDIfQE
        ba3VgT+6GldEj8Loic55Pr/hM62IbrOKOUhkEAemMPog37gSvqmscadSKP1g1XgTYfKJz7Qqvq9k7mwK
        pR86zw+jeuz5XbFCpVB6Aj39Nonx0MRy+6j2dweqDvDJMKv4JMl5bDC+hELoDRhuyE+gaH7BImm7qgVX
        5EDrD4FpVWP9vYpswzSSjgfQM5dLEimCbmOPbG6oBoxvlScUgIw/U7G7VBKIExppUgFYkXGXklz8gATO
        +RMKyOeFnidoCSQQqgDiniFJxRNiW0qWWIFsQ8c3mqTiCbo0KUuuW1rMOU8y8YaRcdciobvgvQA8HPvW
        T5AgQefxVud3A4LdHBffH1B5waFUEFfcpQkWxjZxa4Sk4gkkEW4myPgKkoonkERSgLykgjApQFKApAAk
        FU8giaQAeUkFYVKApABJAUgqnkAS/3kB/vvFkPbL4bKyXyQsTvpXSLLvAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAALsBAAC7AQAAAAAAAAAA
        AAAAAAAA8K1YAO6tWQDtrVsB7rFcAO6wXAAAAAAA7K5eAOytXADsrV1G7K1d0eytXfPsrV2r7K1dHOyt
        XQAAAAAA66thAOytXSXsrV157K1dneytXX/srV0t7a9fAeytXQDsrV0S7K1dw+ytXf/srV3/7K1d/+yt
        XYDsrF0A7K5dAOytXTbsrV3M7K1d/+ytXf/srV3/7K1d2+ytXULsrV0A7K1dKuytXejsrV3/7K1d/+yt
        Xf/srV2u7K5dBOytXQDsrV247K1d/+ytXf/srV3/7K1d/+ytXf/srV26661dCuytXS3srV3q7K1d/+yt
        Xf/srV3+7K1deeytXQDsrV0A7K1d8uytXf/srV3/7K1d/+ytXf/srV3/7K1d5uytXSXsrV0q7K1d6uyt
        Xf/srV3u7K1djuytXRPsrV0AAAAAAOytXfHsrV3/7K1d/+ytXf/srV3/7K1d/+ytXeLsrV0h7K1dK+yt
        XeLsrV217K1dQ+ytXQXsrV0AAAAAAAAAAADsrV3Y7K1d/+ytXf/srV3/7K1d/+ytXf/srV2l7K1dBeyt
        XRnsrV1P7K1dDeytXQAAAAAAAAAAAAAAAAAAAAAA7K1dt+ytXf/srV3/7K1d/+ytXf/srV3A7K1dKOyt
        XQDsrV0A7K1dCuytXT/srV1o7K1dXOytXSjsrF4C7KxdAOytXZPsrV3/7K1d/+ytXfjsrV2e7K1dHeyt
        XQDssF0A7K1dK+ytXansrV3z7K1d/+ytXf3srV3h7K1dbeytXgfsrV1v7K1d/eytXersrV1z7K1dC+yt
        XQDtrV0D7K1dTeytXdTsrV3/7K1d/+ytXf/srV3/7K1d/+ytXfHsrV1k7K1dTuytXcjsrV1L7K5dAuyt
        XQDsrV0M7K1dduytXezsrV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1d0eytXRXsrV0gxp58AOyt
        XQDsrV0f7K1doOytXfnsrV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXfgAAAAAAAAAAOyt
        XQDsrV0j7K1dvuytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3tAAAAAAAA
        AADsrV0A7K1dEOytXVjsrV2u7K1d7eytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1dpgAA
        AAAAAAAAAAAAAOytXQDsrV0A7K1dCOytXTfsrV2L7K1d2OytXfvsrV3/7K1d/+ytXf/srV3/7K1dxuyt
        XSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsrlwA7a5cAuytXSTsrV147K1d0OytXffsrV3t7K1dpuyt
        XSzsrV0Ax4MAAIEDAAABAQAAAAMAAAADAAAABwAAAB8AAAGBAAADAAAABAAAAAgAAAAwAAAA4AAAAOAA
        AAD4AAAA/gEAAA==
</value>
  </data>
</root>