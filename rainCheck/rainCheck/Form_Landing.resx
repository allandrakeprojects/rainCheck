<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label_password_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gYGCSMvJ9rL4gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADNSURBVDhP
        7ZI7DoJAAEQ38RDaehJj4xE8gQexg45fuAQNFYmVllSew9aKUpwxswssG+UATjIJzLxZisWElOf5Lk3T
        Bn7IDTPV35UkyRmDF9x7frETFha+chgN7hicaD7bnIzwuQC0Am+KnJipaxVNVVXVCmVHKMuyo2InZjqg
        I6t4EIq1gL4sy41iJ2a2J6t40Bj4dcCsL4pii6K2AHyFL56Z2b7mRnN3dbZc5MmVIoh9YIFjzf8HUHiJ
        vHKJI80/v+kefgagoMlyY4wxb/Yjxj5bgKxjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label_credential_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gYGCR8fcvCCsQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFfSURBVDhP
        YxgY8J+BMWeViy6URxrIXeUpmrHKbXXmKrf/mStds6HCqCBhvgNH1iq3kKzV7k1Zq90mZq50n52x2n0Z
        UOwYUOM3sGYIPgHVAgVApwEVFgMlXiIpwoc/QXUyMKRt9uUCOm0DFkX48FeodgaGrFWuk7EpyFzluiVj
        pXsnUD4hc5X7OTT5G2DN6as8tYCcf0gS3zNWu/WlLHMWz1zrogQ0xC9ztVsl0IWPkdT8z1rp1gA2ABhI
        GQgJ99dA2jhjlZM0kN6EEMfAX7LXOQtDDXDrhwo+BbtmtWsokP0BKoYVg1wI1gwCGavcc6ASc4DOzATS
        f2AKceCjoPQA0Q2MOqALJmFRhA3/A6pta9jvwALRDASw0AfafBaID6JpgOFfQHw0fZWbK1QbAgAl7gHx
        u6zlbrIgfsYKNx2gLfHAcOgAGtgCDGAXUBoBK8YG0la5yOWsclOEcukNGBgApqI/y/W+PzQAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAALsBAAC7AQAAAAAAAAAA
        AAAAAAAA8K1YAO6tWQDtrVsB7rFcAO6wXAAAAAAA7K5eAOytXADsrV1G7K1d0eytXfPsrV2r7K1dHOyt
        XQAAAAAA66thAOytXSXsrV157K1dneytXX/srV0t7a9fAeytXQDsrV0S7K1dw+ytXf/srV3/7K1d/+yt
        XYDsrF0A7K5dAOytXTbsrV3M7K1d/+ytXf/srV3/7K1d2+ytXULsrV0A7K1dKuytXejsrV3/7K1d/+yt
        Xf/srV2u7K5dBOytXQDsrV247K1d/+ytXf/srV3/7K1d/+ytXf/srV26661dCuytXS3srV3q7K1d/+yt
        Xf/srV3+7K1deeytXQDsrV0A7K1d8uytXf/srV3/7K1d/+ytXf/srV3/7K1d5uytXSXsrV0q7K1d6uyt
        Xf/srV3u7K1djuytXRPsrV0AAAAAAOytXfHsrV3/7K1d/+ytXf/srV3/7K1d/+ytXeLsrV0h7K1dK+yt
        XeLsrV217K1dQ+ytXQXsrV0AAAAAAAAAAADsrV3Y7K1d/+ytXf/srV3/7K1d/+ytXf/srV2l7K1dBeyt
        XRnsrV1P7K1dDeytXQAAAAAAAAAAAAAAAAAAAAAA7K1dt+ytXf/srV3/7K1d/+ytXf/srV3A7K1dKOyt
        XQDsrV0A7K1dCuytXT/srV1o7K1dXOytXSjsrF4C7KxdAOytXZPsrV3/7K1d/+ytXfjsrV2e7K1dHeyt
        XQDssF0A7K1dK+ytXansrV3z7K1d/+ytXf3srV3h7K1dbeytXgfsrV1v7K1d/eytXersrV1z7K1dC+yt
        XQDtrV0D7K1dTeytXdTsrV3/7K1d/+ytXf/srV3/7K1d/+ytXfHsrV1k7K1dTuytXcjsrV1L7K5dAuyt
        XQDsrV0M7K1dduytXezsrV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1d0eytXRXsrV0gxp58AOyt
        XQDsrV0f7K1doOytXfnsrV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXfgAAAAAAAAAAOyt
        XQDsrV0j7K1dvuytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3tAAAAAAAA
        AADsrV0A7K1dEOytXVjsrV2u7K1d7eytXf/srV3/7K1d/+ytXf/srV3/7K1d/+ytXf/srV3/7K1dpgAA
        AAAAAAAAAAAAAOytXQDsrV0A7K1dCOytXTfsrV2L7K1d2OytXfvsrV3/7K1d/+ytXf/srV3/7K1dxuyt
        XSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsrlwA7a5cAuytXSTsrV147K1d0OytXffsrV3t7K1dpuyt
        XSzsrV0Ax4MAAIEDAAABAQAAAAMAAAADAAAABwAAAB8AAAGBAAADAAAABAAAAAgAAAAwAAAA4AAAAOAA
        AAD4AAAA/gEAAA==
</value>
  </data>
</root>